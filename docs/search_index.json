[["index.html", "R para Data Science Solução dos exercícios Welcome", " R para Data Science Solução dos exercícios Jeidsan A. da C. Pereira 2023-10-25 Welcome "],["prefácio.html", "Prefácio", " Prefácio Esta página serviu para estudo e prática com o pacote R Bookdown e contém a solução encontrada por mim para os exercícios propostos no livro R para Data Sciente, de Hadley Wickham e Garret Grolemund, publicado no Brasil em 2019 pela Alta Books Editora (WICKHAM; GROLEMUND, 2019). Por se tratar de um produto construído durante o processo de aprendizagem, o conteúdo pode conter erros, tanto no texto em si, como na lógica utilizada para solução dos exercícios. Dúvidas ou sugestões de melhoria podem ser encaminhadas para o e-mail jeidsan.pereira@gmail.com. Referências WICKHAM, H.; GROLEMUND, G. R para Data Science: importe, arrume, transforme, visualize e modele dados. Rio de Janeiro: Alta Books, 2019. "],["visualização-de-dados-com-ggplot2.html", "Capítulo 1 Visualização de dados com ggplot2 1.1 Introdução 1.2 Primeiros passos 1.3 Mapeamentos estéticos 1.4 Problemas comuns 1.5 Facetas 1.6 Objetos geométricos 1.7 Transformações estatísticas 1.8 Ajustes de posição 1.9 Sistemas de coordenadas 1.10 A gramática em camadas de gráficos", " Capítulo 1 Visualização de dados com ggplot2 Para a correta execução dos códigos desse capítulo, utilizaremos algumas configurações específicas. Inicialmente, precisaremos carregar o pacote nycflights13, que contém os dados de todos os voos da cidade de Nova York em 2013. library(nycflights13) 1.1 Introdução Não temos exercícios nesta seção. 1.2 Primeiros passos Exercício 1.2.1 Execute ggplot(data=mpg);. O que você vê? Solução. ggplot(data=mpg) + tema É exibido um quadro em branco. Este quadro contém o sistema de coordenadas sobre o qual serão desenhados os grpaficos que pretendemos exibir. Exercício 1.2.2 Quantas linhas existem em mtcars? Quantas colunas? Solução. dim(mtcars) ## [1] 32 11 R.: Existem 32 linhas e 11 colunas. Exercício 1.2.3 O que a variável drv descreve? Solução. Executamos o comando ?mpg no console no R e a página de ajuda foi aberta. Nela encontramos o significado de cada variável do conjunto de dados. A varíável descreve o tipo de tração dos carros analisados, onde f significa tração dianteira, r significa tração traseira e 4 significa tração nas quatro rodas. Exercício 1.2.4 Faça um gráfico de dispersão de hwy versus cyl. Solução. ggplot(data = mpg) + geom_point(mapping = aes(x = hwy, y = cyl)) + tema Exercício 1.2.5 O que acontece se você fizer um gráfico de dispersão de class versus drv? Por que esse gráfico não é útil? Solução. ggplot(data = mpg) + geom_point(mapping = aes(x = drv, y = class)) + tema Apesar de serem exibidos dados no gráfico, nenhuma informação substancial é extraída, uma vez que o tipo de tração não está (a princípio) relacionado com a categoria do carro. Outro fator que torno o gráfico pouco informativo é que há, por exemplo, diversas SUVs com tração nas 4 rodas, contudo os valores ficam sobrepostos no gráfico, não dando dimensão do quanto de dados temos. Abaixo seguem duas opções de como trazer mais informação ao gráfico: a primeira opção adiciona um ruído aos dados (position = jitter ou geom_jitter()) de modo que não haja sobreposição; ggplot(data = mpg) + geom_point(mapping = aes(x = drv, y = class), position = &quot;jitter&quot;) + tema a segunda opção, bem mais avançada, adiciona uma estética de size considerando a quantidade de registros. mpg %&gt;% group_by(class, drv) %&gt;% summarize(count = n()) %&gt;% ggplot(mapping = aes(x = drv, y = class, size = count)) + geom_point() + tema ## `summarise()` has grouped output by &#39;class&#39;. You can override using the ## `.groups` argument. 1.3 Mapeamentos estéticos Exercício 1.3.1 O que há de errado com este código? Por que os pontos não estão azuis? ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = &quot;blue&quot;)) + tema Solução. Ao invés de atribuir uma cor aos elementos de geom_point, o atributo color foi passado como uma estética. O gráfico deveria ser construído da seguinte maneira: ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy), color = &quot;blue&quot;) + tema Exercício 1.3.2 Quais variáveis em mpg são categóricas? Quais variáveis são contínuas? Como você pode ver essa informação quando executa mpg? Solução. Usando ?mpg vemos que as variáveis categóricas são: manufacturer, model, trans, drv, fl e class. As variáveis contínuas são: displ, cty, hwy. Exercício 1.3.3 Mapeie uma variável contínua para color, size e shape. Como essas estéticas se comportam de maneira diferente para variáveis categóricas e contínuas? Solução. ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = displ)) + tema ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = displ)) + tema ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, shape = displ)) + tema ## Error in `geom_point()`: ## ! Problem while computing aesthetics. ## ℹ Error occurred in the 1st layer. ## Caused by error in `scale_f()`: ## ! A continuous variable cannot be mapped to the shape aesthetic ## ℹ choose a different aesthetic or use `scale_shape_binned()` Quando possível, a biblioteca ggplot apesenta a estética em um gradiente, como em color e size. Porém, nem sempre isso é possível, como vemos em shape, que só pode ser utilizada com variáveis discretas ou categóricas. Exercício 1.3.4 O que acontece se você mapear a mesma variável a várias estéticas? Solução. ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class, color = class, shape = class)) + tema ## Warning: Using size for a discrete variable is not advised. ## Warning: The shape palette can deal with a maximum of 6 discrete values because ## more than 6 becomes difficult to discriminate; you have 7. Consider ## specifying shapes manually if you must have them. ## Warning: Removed 62 rows containing missing values (`geom_point()`). Os valores da variável serão representados de modo a atender todas as estéticas simultaneamente, por exemplo, no gráfico acima é dada uma cor, um formato e um tamanho específicos para cada classe de veículo. Os veículos de dois lugares são exibidos como um disco rosa pequeno. Exercício 1.3.5 O que a estética stroke faz? com que formas ela trabalha? Solução. ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, stroke = displ)) + tema A estética stroke controla a espessura do ponto ou elemento a ser representado. Exercício 1.3.6 O que acontece se você mapear uma estética a algo diferente de um nome de variável, como aes(color = displ &lt; 5)? Solução. ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = displ &lt; 5)) + tema A expressão é avaliada para cada um dos valores da variável e o resultado é utilizado para plotagem da estética no gráfico. 1.4 Problemas comuns Não temos exercícios nessa seção. 1.5 Facetas Exercício 1.5.1 O que acontece se você criar facetas em uma variável contínua? Solução. ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_wrap(. ~ displ) + tema O ggplot se encarrega de dividir o conjunto em classes e toma o ponto médio de cada classe para realizar a quebra em facetas. Exercício 1.5.2 O que significam as célula em branco em um gráfico com facet_grid(drv ~ cyl)? Como elas se relacionam a este gráfico? ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ cyl) + tema Solução. Significa que para aquela combinação de variáveis, não há nenhum valor observado. Por exemplo, não há nenhum veículo com 5 cilindros e tração nas quatro rodas. Exercício 1.5.3 Que gráficos o código a seguir faz? O que . faz? ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ .) + tema ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(. ~ cyl) + tema Solução. São gerados os gráficos de dispersão segregados pelas variáveis drv e cyl, respectivamente. O . indica que não queremos considerar nenhuma segregação naquela dimensão do grid (linha ou coluna). Exercício 1.5.4 Pegue o primeiro gráfico em facetas dessa seção. ggplot(data = mpg) + geom_point(data = transform(mpg, class = NULL), mapping = aes(x = displ, y = hwy), color = &quot;gray80&quot;) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_wrap(~ class, nrow = 2) + tema Quais são as vantagens de usar facetas, em vez de estética de cor? Quais são as desvantagens? Como o equilíbrio poderia mudar se você tivesse um conjunto de dados maior? Solução. A principal vantagem no uso de facetas é que fica mais fácil analisar os dados quando eles estão separados em seu próprio contexto, contudo visualizá-los assim dificulta a comparação entre grupos. Exercício 1.5.5 Leia ?facet_wrap. O que nrow faz? o que ncol faz? Quais outras opções controlam o layout de paineis individuais? Por que facet_grid() não tem variáveis nrowe ncol? Solução. ?facet_wrap Os atributos ncol e nrow são utilizados pelo facet_wrap para determinar o número de colunas ou linhas (respectivamente) nas quais serão distribuídos os gráficos segregados. Esses atributos não figuram em facet_grid pelo fato deste já organizar as facetas retangularmente. Exercício 1.5.6 Ao usar facet_grid() você normalmente deveria colocar a variável com níveis mais singulares nas colunas. Por quê? Solução. Para melhor aproveitamento do espaço em tela. 1.6 Objetos geométricos x 1.7 Transformações estatísticas x 1.8 Ajustes de posição x 1.9 Sistemas de coordenadas x 1.10 A gramática em camadas de gráficos Exercício x Solução. x "],["fluxo-de-trabalho-o-básico.html", "Capítulo 2 Fluxo de trabalho: o básico", " Capítulo 2 Fluxo de trabalho: o básico "],["transformação-de-dados-com-dplyr.html", "Capítulo 3 Transformação de dados com dplyr", " Capítulo 3 Transformação de dados com dplyr "],["fluxo-de-trabalho-scripts.html", "Capítulo 4 Fluxo de trabalho: scripts", " Capítulo 4 Fluxo de trabalho: scripts "],["análise-exploratória-de-dados.html", "Capítulo 5 Análise exploratória de dados", " Capítulo 5 Análise exploratória de dados "],["fluxo-de-trabalho-projetos.html", "Capítulo 6 Fluxo de trabalho: projetos", " Capítulo 6 Fluxo de trabalho: projetos "],["tibbles-com-tibble.html", "Capítulo 7 Tibbles com tibble", " Capítulo 7 Tibbles com tibble "],["importando-dados-com-readr.html", "Capítulo 8 Importando dados com readr", " Capítulo 8 Importando dados com readr "],["arrumando-dados-com-tidyr.html", "Capítulo 9 Arrumando dados com tidyr", " Capítulo 9 Arrumando dados com tidyr "],["dados-relacionais-com-dplyr.html", "Capítulo 10 Dados relacionais com dplyr", " Capítulo 10 Dados relacionais com dplyr "],["strings-com-stringr.html", "Capítulo 11 Strings com stringr", " Capítulo 11 Strings com stringr "],["fatores-com-forcats.html", "Capítulo 12 Fatores com forcats", " Capítulo 12 Fatores com forcats "],["datas-e-horas-com-lubridate.html", "Capítulo 13 Datas e horas com lubridate", " Capítulo 13 Datas e horas com lubridate "],["pipes-com-magrittr.html", "Capítulo 14 Pipes com magrittr", " Capítulo 14 Pipes com magrittr "],["funções.html", "Capítulo 15 Funções", " Capítulo 15 Funções "],["vetores.html", "Capítulo 16 Vetores", " Capítulo 16 Vetores "],["iteração-com-purrr.html", "Capítulo 17 Iteração com purrr", " Capítulo 17 Iteração com purrr "],["part-modelar.html", "Capítulo 18 (PART) Modelar", " Capítulo 18 (PART) Modelar "],["o-básico-de-modelos-com-modelr.html", "Capítulo 19 O básico de modelos com modelr", " Capítulo 19 O básico de modelos com modelr "],["construção-de-modelos.html", "Capítulo 20 Construção de modelos", " Capítulo 20 Construção de modelos "],["muitos-modelos-com-purrr-e-broom.html", "Capítulo 21 Muitos modelos com purrr e broom", " Capítulo 21 Muitos modelos com purrr e broom "],["r-markdown.html", "Capítulo 22 R Markdown", " Capítulo 22 R Markdown "],["gráficos-para-comunicação-com-ggplot2.html", "Capítulo 23 Gráficos para comunicação com ggplot2", " Capítulo 23 Gráficos para comunicação com ggplot2 "],["formatos-r-markdown.html", "Capítulo 24 Formatos R Markdown", " Capítulo 24 Formatos R Markdown "],["fluxo-de-trabalho-de-r-markdown.html", "Capítulo 25 Fluxo de trabalho de R Markdown", " Capítulo 25 Fluxo de trabalho de R Markdown "],["referências.html", "Referências", " Referências WICKHAM, H.; GROLEMUND, G. R para Data Science: importe, arrume, transforme, visualize e modele dados. Rio de Janeiro: Alta Books, 2019. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
